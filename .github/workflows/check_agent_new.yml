name: Java Agent Check New

on:
  workflow_dispatch:

jobs:
  agentcheck:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4.2.1
      - name: Set up JDK 17
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        id: get-newer-version
        run: |
          ./agent_check.sh
          echo "CURRENT_VERSION=`cat ./current_version.txt`" >> "$GITHUB_OUTPUT"
          echo "NEWER_VERSION=`cat ./current_version.txt`" >> "$GITHUB_OUTPUT"
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Download Java Agent
        id: agent_download
        run: |
            mvn clean
            mvn -q dependency:copy-dependencies
            mv target/dependency/contrast-*.jar ./contrast.jar
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Install dependencies
        run: |
          pip install -r requirements.txt
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Reset Contrast Application
        env:
          CONTRAST_AUTHORIZATION: ${{ secrets.CONTRAST_AUTHORIZATION }} 
          CONTRAST_API_KEY: ${{ secrets.CONTRAST_API_KEY }} 
          CONTRAST_ORG_ID: ${{ vars.CONTRAST_ORG_ID }} 
        run: |
          python reset_app.py
          sleep 60
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Clone PetClinicDemo
        uses: actions/checkout@v4.2.1
        with:
          repository: 'turbou/PetClinicDemo'
          path: 'petclinicdemo'
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Set up JDK 8
        uses: actions/setup-java@v4.4.0
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Build PetClinicDemo Jar
        id: build_petclinic
        run: |
            cd petclinicdemo
            mvn -q clean package -DskipTests
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Upload artifact application jar
        uses: actions/upload-artifact@v4.4.3
        with:
          name: petclinic-jarfile
          path: petclinicdemo/target/spring-petclinic-1.5.1.jar
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Build PetClinic Docker Image
        run: |
            docker build --no-cache -t petclinic .
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Launch PetClinic
        id: launch_petclinic
        run: |
            docker run -d \
              -e CONTRAST__API__TOKEN="${{ secrets.CONTRAST_API_TOKEN }}" \
              -e CONTRAST__SERVER__ENVIRONMENT="development" \
              -e CONTRAST__SERVER__NAME="GithubPipeline" \
              -e CONTRAST__APPLICATION__NAME="${{ vars.CONTRAST_APP_NAME }}" \
              -e CONTRAST__AGENT__LOGGER__LEVEL="INFO" \
              -e CONTRAST__AGENT__LOGGER__PATH="/tmp/agent.log" \
              -e CONTRAST__AGENT__POLLING__APP_ACTIVITY_MS=3000 \
              -e CONTRAST__AGENT__POLLING__SERVER_ACTIVITY_MS=3000 \
              -e CONTRAST__API__TIMEOUT_MS=3000 \
              -e CONTRAST__ASSESS__SAMPLING__ENABLE=true \
              -e CONTRAST__APPLICATION__SESSION_METADATA="branchName=${{ github.run_number }}" \
              -v /tmp:/tmp \
              --network host \
              --name petclinic-app petclinic
            sleep 90
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Install dependencies
        run: |
          pip install -r requirements.txt
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Set up Playwright
        run: |
          playwright install
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Run Playwrite
        run: |
          python Davis.py
          sleep 30
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Print container log
        run: docker logs petclinic-app
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Print agent log
        run: cat /tmp/agent.log
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        id: verify
        name: Verify result
        env:
          CONTRAST_AUTHORIZATION: ${{ secrets.CONTRAST_AUTHORIZATION }} 
          CONTRAST_API_KEY: ${{ secrets.CONTRAST_API_KEY }} 
          CONTRAST_ORG_ID: ${{ vars.CONTRAST_ORG_ID }} 
          CONTRAST_USER_NAME: ${{ vars.CONTRAST_USER_NAME }} 
        run: |
          python verify.py | tee ./output.txt
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "RESULT<<$EOF" >> $GITHUB_OUTPUT
          cat ./output.txt >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Upload artifact report.pdf
        uses: actions/upload-artifact@v4.4.3
        with:
          name: petclinic-report
          path: report.pdf
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.27.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WORKFLOW_WEBHOOK_URL }}  
        with:
          payload: |
            {   
              "version": "${{ steps.get-newer-version.outputs.NEWER_VERSION }}",
              "result": |
                "${{ steps.verify.outputs.RESULT }}"
            }   
      - if: steps.get-newer-version.outputs.NEWER_VERSION != ''
        name: Commit updated pom.xml
        id: commit_push
        run: |
            git config core.filemode false
            if ! git diff --exit-code --quiet ./pom.xml
            then
              git config user.name turbou
              git config user.email turbou@i.softbank.jp
              git commit -m "${{ steps.get-newer-version.outputs.CURRENT_VERSION }} -> ${{ steps.get-newer-version.outputs.NEWER_VERSION }}." ./pom.xml
              git push
            fi

